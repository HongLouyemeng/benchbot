#!/bin/bash

################################################################################
################## Coloured terminal output & heading blocks ###################
################################################################################

colour_red='\033[0;31m'
colour_green='\033[0;32m'
colour_yellow='\033[0;33m'
colour_blue='\033[0;34m'
colour_nc='\033[0m'

header_block() {
  header_text=${1:-"Header Block"}
  colour=${2:-${colour_red}}  # Red
  header_char=${3:-"#"}

  len=${#header_text}
  let "len_left=(78 - $len)/2" "len_right=(79 - $len)/2"

  echo -e "$colour"
  printf "%.0s${header_char}" $(seq 1 80); printf '\n'
  printf "%.0s${header_char}" $(seq 1 $len_left); printf " $header_text "; printf "%.0s${header_char}" $(seq $len_right); printf '\n'
  printf "%.0s${header_char}" $(seq 1 80)
  echo -e "$colour_nc\n"
}

################################################################################
################### Checking if dependencies exist / are met ###################
################################################################################


eval_found() {
  # $1 file: echos 0 if found, 1 if not found
  # NOTE: this is a real frail check if the file is valid at the moment...
  if [ -z "$1" ] || [ 1 != $(echo "$1" | wc -l) ]; then
    echo 1
  else
    echo 0
  fi
}

eval_version() {
  # $1 = version, $2 = required, $3=recommended: echos 0 if >= recommended, 1 if >= required, 2 if below
  if [ "$1" = "" ] || [[ ! "$1" == [0-9]* ]]; then
    echo 2
  elif [ "$1" = "$3" ] || [ "$3" = $(echo -e "$1\n$3" | sort -V | head -n 1) ]; then
    echo 0
  elif [ "$1" = "$2" ] || [ "$2" = $(echo -e "$1\n$2" | sort -V | head -n 1) ]; then
    echo 1
  else
    echo 2
  fi
}

find_file() {
  # $1 = directory, $2 = md5sum, $3 = file regex command: echos matching filename
  md5_list=$(find "$1" -type f | xargs md5sum)
  file_match=$(echo "$md5_list" | awk '{print $2}' | eval ${3})
  md5_match=$([ -z "$2" ] && echo "" || echo "$md5_list" | grep "$2" | awk '{print $2}')
  if [ ! -z "$file_match" ]; then
    echo "$file_match"
  elif [ ! -z "$md5_match" ]; then
    echo "$md5_match"
  fi
}
